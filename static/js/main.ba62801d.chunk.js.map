{"version":3,"sources":["components/TodoListTemplate.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","components/Palette.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","palette","form","children","className","Form","value","onChange","onCreate","onKeyPress","color","style","onClick","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","Component","TodoItemList","todos","todoList","map","Color","active","background","Palette","colors","selected","onSelect","colorList","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","nextTodos","handleRemove","filter","handleSelect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba62801d.chunk.js","sourcesContent":["import React from \"react\";\nimport './TodoListTemplate.css';\n\nconst TodoListTemplate = ({ palette, form, children }) => {\n    return (\n        <main className=\"todo-list-template\">\n            <div className=\"title\">\n                오늘 할 일\n            </div>\n            <section className=\"palette-wrapper\">\n                { palette }\n            </section>\n            <section className=\"form-wrapper\">\n                { form }\n            </section>\n            <section className=\"todos-wrapper\">\n                { children }\n            </section>\n        </main>\n    )\n}\n\nexport default TodoListTemplate;","import React from \"react\";\nimport './Form.css';\n\nconst Form = ({ value, onChange, onCreate, onKeyPress, color }) => {\n    return (\n        <div className=\"form\">\n            <input value={value} onChange={onChange} onKeyPress={onKeyPress} style={{color}} />\n            <div className=\"create-button\" onClick={onCreate}>\n                create\n            </div>\n        </div>\n    )\n}\n\nexport default Form;","import React, { Component } from \"react\";\nimport './TodoItem.css';\n\nclass TodoItem extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.checked !== nextProps.checked;\n    }\n\n    render() {\n        const { text, checked, id, onToggle, onRemove, color } = this.props;\n\n        return (\n            <div className=\"todo-item\" onClick={() => onToggle(id)}>\n                <div className=\"remove\" onClick={(e) => {\n                    e.stopPropagation();\n                    onRemove(id)\n                }}>\n                    &times;\n                </div>\n                <div className={`todo-text ${checked && 'checked'}`} style={{ color }}>\n                    <div>{ text }</div>\n                </div>\n                {\n                    checked && (<div className=\"check-mark\">✓</div>)\n                }\n            </div>\n        )\n    }\n}\n\nexport default TodoItem;","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass TodoItemList extends Component {\n    render() {\n        const { todos, onToggle, onRemove } = this.props;\n\n        const todoList = todos.map(\n            ({id, text, checked, color}) => (\n                <TodoItem\n                    id={id}\n                    text={text}\n                    checked={checked}\n                    onToggle={onToggle}\n                    onRemove={onRemove}\n                    color={color}\n                    key={id}\n                />\n            )\n        )\n\n        return (\n            <div> \n                {todoList}\n            </div>\n        )\n    }\n}\n\nexport default TodoItemList;","import React from \"react\";\nimport './Palette.css';\n\nconst Color = ({ color, active, onClick }) => {\n    return (\n      <div className={`color ${active && 'active'}`} style={{ background: color }} onClick={onClick} />\n    )\n  }\n  \n  const Palette = ({colors, selected, onSelect}) => {\n    const colorList = colors.map(\n      (color) => (<Color color={color} active={selected===color} onClick={() => onSelect(color)} key={color}/>)\n    );\n    return (\n      <div className=\"palette\">\n        {colorList}\n      </div>\n    );\n  };\n\nexport default Palette;","import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport Palette from './components/Palette';\n\nconst colors = ['#343a40', '#f03e3e', '#12b886', '#228ae6'];\n\nclass App extends Component {\n\n  id = 3 // 이미 0,1,2 가 존재하므로 3으로 설정\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: ' 리액트 소개', checked: false },\n      { id: 1, text: ' 리액트 소개', checked: true },\n      { id: 2, text: ' 리액트 소개', checked: false }\n    ],\n    color: '#343a40'\n  }\n\n  handleChange = (e) => {\n    // const { value } = this.value;\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: '',\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    })\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter')\n      this.handleCreate();\n  }\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n\n    const nextTodos = todos;\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    }\n\n    this.setState({\n      todos: nextTodos\n    })\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelect = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelect\n    } = this;\n    return (\n      <TodoListTemplate \n      form={ \n        <Form \n          value={input}\n          onChange={handleChange}\n          onCreate={handleCreate}\n          onKeyPress={handleKeyPress}\n          color={color}\n        /> \n      }\n      palette={(\n        <Palette colors={colors} selected={color} onSelect={handleSelect}/>\n      )}\n      >\n        <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove} />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}